import base64 as c
import zipfile
import os


def encode(data, datatype="string"):
    """Encodes a file or string to a string.
    Optios:
    | data: The string or filename.
    | type: 'File' or 'string'"""
    if datatype == "file":
        with open(data, "rb") as fl:
            obj = c.b85encode(fl.read())
            return obj
    if datatype == "string":
        obj = c.b85encode(data.encode("utf-8"))
        return obj


def decode(data, targetfile=None, iszip=False):
    """Decodes byte-object to a file.
    Optios:
    | data: The string to decode.
    | targetfile: The File were the decoded string will be. If it is None it will return a string..
    | zip:  Is the encoded object a zip file? The program extracts it automatically.'"""
    target = c.b85decode(data)
    if targetfile is None:
        return target
    if iszip:
        with open(targetfile + ".zip", "wb") as fl:
            fl.write(target)
        with zipfile.ZipFile(targetfile + ".zip", 'r') as source:
            source.extractall(targetfile)
        os.remove(targetfile + ".zip")
    else:
        with open(targetfile, "wb") as fl:
            fl.write(target)
def generate(sourcefile, targetfile, zip):
    if targetfile == "":
        targetfile == sourcefile
    filetext = '"""Installer script. Generated by cnstall."""\n' \
    'import base64 as c\n' \
    'import zipfile\n' \
    'import os\n' \
    'print ("Starting Installer...")\n' \
    'def decode(data, targetfile, zip=False):\n' \
    '   """ \n' \
    '   Edited Part of the cnstall package. Need for unpack.\n' \
    '   Decodes byte-object to a file.\n' \
    '   Options:\n' \
    '   | data: The  filename.\n' \
    '   | zip:  Is the encoded object a zip file? The program extracts it automatically."""\n' \
    '   print ("Decoding...")\n' \
    '   target = c.b85decode(data)\n' \
    '   if zip:\n' \
    '       with open(targetfile + ".zip", "wb") as fl:\n' \
    '           print ("Generating ZIP...")\n' \
    '           fl.write(target)\n' \
    '       with zipfile.ZipFile(targetfile + ".zip", 'r') as source:'+"\n" \
    '           print ("Extracting...")\n' \
    '           source.extractall(targetfile)\n' \
    '       print ("Clearing cache...")\n' \
    '       os.remove(targetfile + ".zip")\n' \
    '   else:\n' \
    '       with open(targetfile, "wb") as fl:\n' \
    '           fl.write(target)\n'
    filetext += 'print ("Take settings...")\nzip = ' + str(zip) + '\n'+'name = ' + "'" + targetfile + "'" + '\n\n'
    filetext += 'data = ' + str(encode(sourcefile, "file")) + '\n\n'
    filetext += 'decode(data, name, zip)\nprint ("Installed.")'
    with open("get-" + sourcefile.split(".")[0]+".py", "w") as fl:
        fl.write(filetext)


def main(*args, **kwargs):
    src = input("Sourcefile: ")
    trgt = input("Targetfile: ")
    if trgt == "":
        trgt = src
    generate(src, trgt, input("zip(y/n:) ") == "y")
    print("Generated.")
    input()
if __name__ == "__main__":
    main()
